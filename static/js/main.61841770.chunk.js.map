{"version":3,"sources":["img/photo.jpeg","Logo.js","Nav.js","Contact.js","Header.js","Img.js","Content.js","Footer.js","Box.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Logo","className","Nav","id","href","Contact","Header","Img","src","Photo","Content","Footer","Box","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,oC,0ICW5BC,MARf,WACI,OACI,wBAAIC,UAAU,QAAd,SCWOC,MAbf,WACI,OACI,yBAAKC,GAAG,cACJ,4BACI,4BAAI,uBAAGC,KAAK,IAAIH,UAAU,gBAAtB,SACJ,4BAAI,uBAAGG,KAAK,KAAR,UACJ,4BAAI,uBAAGA,KAAK,KAAR,SACJ,4BAAI,uBAAGA,KAAK,KAAR,eCDLC,MANf,WACI,OACI,uBAAGD,KAAK,IAAID,GAAG,WAAf,eCWOG,MAVf,WACI,OACI,4BAAQH,GAAG,UACP,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,gBCFGI,MANf,WACI,OACI,yBAAKC,IAAKC,IAAOR,UAAU,SCYpBS,MAdf,WACI,OACI,0BAAMP,GAAG,WACN,yBAAKF,UAAU,QACV,+CACA,uCAAY,6BAAZ,aAEJ,yBAAKA,UAAU,WACX,kBAAC,EAAD,SCQDU,MAjBf,WACI,OACI,gCACG,yBAAKV,UAAU,gBACX,2CAGA,yBAAKA,UAAU,WACV,uBAAGG,KAAK,4CAA4CH,UAAU,YAC9D,uBAAGG,KAAK,2CAA2CH,UAAU,YAC7D,uBAAGG,KAAK,gCAAgCH,UAAU,oBCGvDW,MAVf,WACI,OACI,yBAAKT,GAAG,OACL,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCIU,MARf,WACE,OACE,yBAAKZ,UAAU,aACT,kBAAC,EAAD,QCMUa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.61841770.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/photo.b763f772.jpeg\";","import React from 'react';\r\nimport './css/Style.css';\r\n\r\nfunction Logo() {\r\n    return (\r\n        <h3 className=\"logo\">\r\n            juan\r\n        </h3>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './css/Style.css';\r\n\r\nfunction Nav() {\r\n    return (\r\n        <nav id=\"navigation\">\r\n            <ul>\r\n                <li><a href=\"#\" className=\"active_class\">Home</a></li>\r\n                <li><a href=\"#\">About</a></li>\r\n                <li><a href=\"#\">Blog</a></li>\r\n                <li><a href=\"#\">Gallery</a></li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport './css/Style.css';\r\n\r\nfunction Contact() {\r\n    return (\r\n        <a href=\"#\" id=\"contact\">Contact Me</a>\r\n    );\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport './css/Style.css';\r\nimport Logo from './Logo.js';\r\nimport Nav from './Nav.js';\r\nimport Contact from './Contact.js';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header id=\"header\">\r\n            <Logo/>\r\n            <Nav/>\r\n            <Contact/>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './css/Style.css';\r\nimport Photo from './img/photo.jpeg';\r\nfunction Img() {\r\n    return (\r\n        <img src={Photo} className=\"img\"></img>\r\n    );\r\n}\r\n\r\nexport default Img;\r\n","import React from 'react';\r\nimport './css/Style.css';\r\nimport Img from './Img.js';\r\nfunction Content() {\r\n    return (\r\n        <main id=\"content\">\r\n           <div className=\"text\">\r\n                <h2>Hello, I'm Juan</h2>\r\n                <h1>Software<br/>Engineer</h1>\r\n           </div>\r\n            <div className=\"picture\">\r\n                <Img/>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Content;\r\n","import React from 'react';\r\nimport './css/Style.css';\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n           <div className=\"social-media\">\r\n               <p>\r\n                  Follow me on\r\n               </p>\r\n               <div className=\"icon-sm\">\r\n                    <a href=\"https://www.facebook.com/juan.valerian.7/\" className=\"link-fb\"></a>\r\n                    <a href=\"https://www.instagram.com/juanvaleriand/\" className=\"link-ig\"></a>\r\n                    <a href=\"https://github.com/juandelima\" className=\"link-github\"></a>\r\n               </div>\r\n           </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './css/Style.css';\r\nimport Header from './Header.js';\r\nimport Content from './Content.js';\r\nimport Footer from './Footer.js';\r\nfunction Box() {\r\n    return (\r\n        <div id=\"box\">\r\n           <Header/>\r\n           <Content />\r\n           <Footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Box;\r\n","import React from 'react';\nimport './css/Style.css';\nimport Box from './Box.js';\nfunction App() {\n  return (\n    <div className=\"container\">\n          <Box />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}